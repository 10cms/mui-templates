{"version":3,"sources":["Pages/Form/List/schema.ts","Pages/Form/List/List.tsx","base.ts","Components/TreeMenu/index.tsx","Components/Layout/index.tsx","Pages/Dashboard.tsx","Pages/User/Filter.tsx","Pages/User/Table.tsx","Pages/User/User.tsx","Pages/UserEditor/Schema.ts","Components/TableField.tsx","Pages/UserEditor/UserEditor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["fields","component","name","label","defaultItem","items","content","validate","type","threshold","noItemsMessage","buttonLabels","add","remove","FieldContainerProps","container","style","paddingLeft","paddingRight","List","_","Container","schema","FormTemplate","props","submitLabel","componentMapper","onSubmit","console","log","basepath","process","url","path","useStyles","makeStyles","createStyles","root","width","maxWidth","MenuItem","title","children","icon","React","useState","open","setOpen","loaction","useLocation","ListItem","button","onClick","undefined","navigate","base","selected","pathname","ListItemIcon","Icon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","Menu","classes","Subheader","ListSubheader","subheader","className","map","item","key","navs","TreeMenu","menu","Header","getHeader","styled","DrawerSidebar","getDrawerSidebar","SidebarContent","getSidebarContent","SidebarTrigger","getSidebarTrigger","Content","getContent","LayoutBuilder","configureHeader","builder","registerConfig","position","initialHeight","configureEdgeSidebar","create","anchor","registerTemporaryConfig","registerPermanentConfig","collapsible","Layout","theme","useTheme","scheme","Toolbar","sidebarId","Box","textAlign","flexGrow","Dashboard","FormFieldGridProps","xs","sm","md","lg","xl","Filter","value","canReset","resetLabel","buttonOrder","ComponentMapper","columns","field","headerName","editable","renderCell","Button","rows","id","sex","created_at","age","DataGridDemo","height","pageSize","checkboxSelection","disableSelectionOnClick","User","display","mt","mb","mr","variant","color","description","marginBottom","TableField","useFieldApi","input","minHeight","onEditCellChangeCommitted","forEach","row","onChange","UserEditor","initialValues","learning","monday","tuesday","wednesday","thursday","friday","saturday","sunday","happy","createMuiTheme","zhCN","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68683db8.chunk.js","sourcesContent":["// https://data-driven-forms.org/provided-mappers/field-array?mapper=mui\n\nexport default {\n  fields: [\n    {\n      component: \"field-array\",\n      name: \"categories\",\n      label: \"大分类\",\n      defaultItem: {\n        name: \"分类名称\",\n        items: [\n          {\n            content: \"项目内容\"\n          }\n        ],\n      },\n      validate: [\n        {\n          type: \"min-items\",\n          threshold: 1,\n        },\n      ],\n      noItemsMessage: \"请添加分类\",\n      buttonLabels: {\n        add: \"添加分类\",\n        remove: \"删除分类\",\n      },\n      fields: [\n        {\n          component: \"text-field\",\n          label: \"分类名称\",\n          name: \"name\"\n        },\n        {\n          component: \"field-array\",\n          name: \"items\",\n          label: \"项目\",\n          noItemsMessage: \"请添加项目\",\n          FieldContainerProps: {\n            container: true,\n            style: {\n              paddingLeft: \"5%\",\n              paddingRight: \"5%\",\n            }\n          },\n          defaultItem: {\n            content: \"项目内容\"\n          },\n          validate: [\n            {\n              type: \"min-items\",\n              threshold: 1,\n            },\n          ],\n          fields: [\n            {\n              component: \"textarea\",\n              label: \"Item\",\n              name: \"content\"\n            },\n          ],\n          buttonLabels: {\n            add: \"添加项目\",\n            remove: \"删除项目\",\n          }\n        },\n      ],\n    },\n  ],\n}\n","import React, { ReactElement } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport FormRenderer from \"@data-driven-forms/react-form-renderer/form-renderer\"\nimport FormTemplate from \"@data-driven-forms/mui-component-mapper/form-template\"\nimport componentMapper from \"@data-driven-forms/mui-component-mapper/component-mapper\"\nimport Container from \"@material-ui/core/Container\"\n\nimport schema from \"./schema\"\n\nconst List = (_: RouteComponentProps): ReactElement => {\n  return (\n    <Container>\n      <h2>动态表单 - 列表字段</h2>\n      <FormRenderer\n        schema={schema}\n        FormTemplate={(props) => <FormTemplate submitLabel=\"提交保存\" {...props} />}\n        componentMapper={componentMapper}\n        onSubmit={console.log}\n      />\n    </Container>\n  )\n}\n\nexport default List\n","const basepath = process.env.PUBLIC_URL\n\nconst url = (path = ''): string => {\n  return basepath + '/' + path\n}\n\nexport default url","import React from \"react\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { navigate, useLocation } from \"@reach/router\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport ExpandLess from \"@material-ui/icons/ExpandLess\"\nimport ExpandMore from \"@material-ui/icons/ExpandMore\"\nimport Icon from \"@material-ui/core/Icon\"\nimport { ReactElement } from \"react\"\nimport base from \"../../base\"\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n    },\n  })\n)\n\ntype MenuProps = {\n  title?: string\n  items: Array<MenuItemProps>\n}\n\ntype MenuItemProps = {\n  title: string\n  icon?: string\n  url?: string\n  children?: Array<MenuItemProps>\n}\n\ntype TreeMenuData = Array<MenuProps>\n\nconst MenuItem = ({ title, url, children, icon }: MenuItemProps) => {\n  const [open, setOpen] = React.useState(true)\n  const loaction = useLocation()\n\n  const handleClick = () => {\n    if (children) {\n      setOpen(!open)\n    } else if (url !== undefined) {\n      navigate(base(url))\n    }\n  }\n\n  return (\n    <>\n      <ListItem\n        button\n        onClick={handleClick}\n        selected={url === loaction.pathname}\n      >\n        <ListItemIcon>\n          <Icon>{icon}</Icon>\n        </ListItemIcon>\n        <ListItemText primary={title} />\n        {children && (open ? <ExpandLess /> : <ExpandMore />)}\n      </ListItem>\n      {children && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          {<Menu items={children} />}\n        </Collapse>\n      )}\n    </>\n  )\n}\n\nconst Menu = ({ title, items }: MenuProps) => {\n  const classes = useStyles()\n  const Subheader: ReactElement | undefined = title ? (\n    <ListSubheader component=\"div\">{title}</ListSubheader>\n  ) : undefined\n\n  return (\n    <List component=\"nav\" subheader={Subheader} className={classes.root}>\n      <>\n        {items.map((item: MenuItemProps, key) => (\n          <MenuItem {...item} key={key} />\n        ))}\n      </>\n    </List>\n  )\n}\n\nconst navs: TreeMenuData = [\n  {\n    items: [\n      {\n        title: \"Dashboard\",\n        icon: \"home\",\n        url: \"\",\n      },\n      {\n        title: \"用户\",\n        icon: \"person\",\n        children: [\n          {\n            title: \"用户管理\",\n            url: \"user\",\n          },\n          {\n            title: \"编辑用户\",\n            url: \"user-editor\",\n          },\n        ],\n      },\n      {\n        title: \"动态表单\",\n        icon: \"listalt\",\n        children: [{ title: \"列表字段\", url: \"form/list\" }],\n      },\n    ],\n  },\n]\n\nexport default function TreeMenu(): ReactElement {\n  return (\n    <>\n      {navs.map((menu: MenuProps, key) => (\n        <Menu {...menu} key={key} />\n      ))}\n    </>\n  )\n}\n","import React, { ReactElement } from \"react\"\nimport styled from \"styled-components\"\nimport {\n  Root,\n  getHeader,\n  getDrawerSidebar,\n  getContent,\n  getSidebarContent,\n  getSidebarTrigger,\n} from \"@mui-treasury/layout\"\nimport { Toolbar, useTheme } from \"@material-ui/core\"\nimport LayoutBuilder from \"@mui-treasury/layout/builders/LayoutBuilder\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport TreeMenu from \"../TreeMenu\"\nimport Box from \"@material-ui/core/Box\"\n\nconst Header = getHeader(styled)\nconst DrawerSidebar = getDrawerSidebar(styled)\nconst SidebarContent = getSidebarContent(styled)\nconst SidebarTrigger = getSidebarTrigger(styled)\nconst Content = getContent(styled)\n\nconst schema = LayoutBuilder()\n\nschema.configureHeader((builder) => {\n  builder\n    .registerConfig(\"xs\", {\n      position: \"relative\",\n      initialHeight: 56,\n    })\n    .registerConfig(\"md\", {\n      position: \"fixed\",\n    })\n})\n\nschema.configureEdgeSidebar((builder) => {\n  builder\n    .create(\"primarySidebar\", {\n      anchor: \"left\",\n    })\n    .registerTemporaryConfig(\"xs\", {\n      width: 256,\n    })\n    .registerPermanentConfig(\"md\", {\n      width: 256,\n      collapsible: false,\n    })\n})\n\ntype LayoutProps = RouteComponentProps & {\n  children: ReactElement\n}\n\nconst Layout = ({ children }: LayoutProps): ReactElement => {\n  const theme = useTheme()\n\n  return (\n    <Root theme={theme} scheme={schema}>\n      <Header>\n        <Toolbar>\n          <SidebarTrigger sidebarId={'primarySidebar'} />\n          <Box textAlign=\"center\" flexGrow={1}>\n            <h1>Material UI Templates</h1>\n          </Box>\n        </Toolbar>\n      </Header>\n      <DrawerSidebar sidebarId={\"primarySidebar\"}>\n        <SidebarContent>\n          <TreeMenu />\n        </SidebarContent>\n      </DrawerSidebar>\n      <Content>{children}</Content>\n    </Root>\n  )\n}\nexport default Layout\n","import * as React from 'react';\nimport { ReactElement } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport Container from '@material-ui/core/Container';\n\nconst Dashboard = (_: RouteComponentProps): ReactElement => {\n  return (\n    <Container>\n      <h2>\n        Dashboard\n      </h2>\n    </Container>\n  )\n}\n\nexport default Dashboard","import * as React from 'react';\nimport FormRenderer from \"@data-driven-forms/react-form-renderer/form-renderer\"\nimport FormTemplate from \"@data-driven-forms/mui-component-mapper/form-template\"\nimport ComponentMapper from \"@data-driven-forms/mui-component-mapper/component-mapper\"\nimport { ReactElement } from 'react';\n\ntype FilterValue = {\n  [name:string]: string\n}\n\nconst schema = {\n  fields: [\n    {\n      name: \"name\",\n      label: \"姓名\",\n      component: 'text-field',\n      FormFieldGridProps: {\n        xs: 6,\n        sm: 4,\n        md: 3,\n        lg: 2,\n        xl: 1,\n      }\n    },\n  ],\n}\n\nconst Filter = (): ReactElement => {\n  const submitHandler = (value: FilterValue) => {\n    console.log(value)\n  }\n\n  return (\n    <FormRenderer\n      schema={schema}\n      onSubmit={submitHandler}\n      FormTemplate={(props) => <FormTemplate submitLabel=\"搜索\" canReset resetLabel=\"重置\" buttonOrder={[ 'reset', 'submit', 'cancel' ]} {...props} />}\n      componentMapper={ComponentMapper}\n    />\n  )\n}\n\nexport default Filter","import * as React from 'react';\nimport { DataGrid, GridCellParams, GridColDef } from '@material-ui/data-grid';\nimport { ReactNode } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ReactElement } from 'react';\n\nconst columns: GridColDef[] = [\n  {\n    field: 'name',\n    headerName: '姓名',\n    width: 150,\n    editable: true,\n  },\n  {\n    field: 'sex',\n    headerName: '性别',\n    width: 150,\n    editable: false,\n  },\n  {\n    field: 'age',\n    headerName: '年龄',\n    type: 'number',\n    width: 150,\n    editable: true,\n  },\n  {\n    field: 'created_at',\n    headerName: '创建时间',\n    type: 'dateTime',\n    width: 150,\n    editable: true,\n  },\n  {\n    field: 'action',\n    headerName: '操作',\n    width: 160,\n    renderCell: (_: GridCellParams): ReactNode => {\n      return <Button>编辑</Button>\n    }\n  },\n];\n\nconst rows = [\n  { id: 1, name: 'Snow', sex:\"男\", created_at: '2021-10-10', age: 35 },\n  { id: 2, name: 'Lannister', sex:\"男\", created_at: '2021-10-10', age: 42 },\n  { id: 3, name: 'Lannister', sex:\"男\", created_at: '2021-10-10', age: 45 },\n  { id: 4, name: 'Stark', sex:\"男\", created_at: '2021-10-10', age: 16 },\n  { id: 5, name: 'Targaryen', sex:\"男\", created_at: '2021-10-10', age: 32 },\n  { id: 6, name: 'Melisandre', sex:\"男\", created_at: '20021-10-10', age: 50 },\n  { id: 7, name: 'Clifford', sex:\"男\", created_at: '2021-10-10', age: 44 },\n  { id: 8, name: 'Frances', sex:\"男\", created_at: '2021-10-10', age: 36 },\n  { id: 9, name: 'Roxie', sex:\"男\", created_at: '2021-10-10', age: 65 },\n];\n\nexport default function DataGridDemo(): ReactElement {\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n        checkboxSelection\n        disableSelectionOnClick\n      />\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport Container from '@material-ui/core/Container';\nimport Filter from './Filter';\nimport Box from '@material-ui/core/Box';\nimport { Button } from '@material-ui/core';\nimport Table from './Table';\n\nconst User = (_: RouteComponentProps): React.ReactElement => {\n  return <>\n    <Container>\n      <h1>用户管理</h1>\n      <Filter />\n      <Box display=\"flex\" mt={5} mb={5}>\n        <Box flexGrow={1} />\n        <Box mr={2}>\n          <Button variant=\"contained\" color=\"primary\">\n            导出评定记录\n          </Button>\n        </Box>\n        <Box>\n          <Button variant=\"contained\" color=\"primary\">\n            添加评定记录\n          </Button>\n        </Box>\n      </Box>\n      <Table />\n    </Container>\n  </>\n}\n\nexport default User","\nconst schema = {\n  fields: [\n    {\n      name: \"name\",\n      label: \"姓名\",\n      component: 'text-field',\n      variant: \"outlined\",\n      FormFieldGridProps: {\n        xs: 4\n      }\n    },\n    {\n      name: \"sex\",\n      label: \"性别\",\n      component: 'text-field',\n      variant: \"outlined\",\n      FormFieldGridProps: {\n        xs: 4\n      }\n    },\n    {\n      name: \"age\",\n      label: \"年龄\",\n      variant: \"outlined\",\n      component: 'text-field',\n      FormFieldGridProps: {\n        xs: 4\n      }\n    },\n    {\n      component: \"sub-form\",\n      description: \"详细资料\",\n      name: \"detail\",\n      fields: [\n        {\n          name: \"jobs\",\n          label: \"工作经验\",\n          variant: \"outlined\",\n          component: \"textarea\",\n          style: {\n            marginBottom: \"1rem\"\n          }\n        },\n        {\n          name: \"edu\",\n          label: \"学习经验\",\n          variant: \"outlined\",\n          component: \"textarea\",\n          style: {\n            marginBottom: \"1rem\"\n          }\n        },\n        {\n          name: \"intresting\",\n          label: \"兴趣爱好\",\n          variant: \"outlined\",\n          component: \"textarea\",\n          style: {\n            marginBottom: \"1rem\"\n          }\n        }\n      ]\n    },\n    {\n      component: \"sub-form\",\n      description: \"日程安排\",\n      name: \"schedule\",\n      fields: [\n        {\n          name: \"learning\",\n          component: \"table\",\n          columns: [\n            { headerName: \"学习安排\", field: \"name\", width: 200, editable: false },\n            { headerName: \"周一\", field: \"monday\", width: 150 , editable: true },\n            { headerName: \"周二\", field: \"tuesday\", width: 150 , editable: true },\n            { headerName: \"周三\", field: \"wednesday\", width: 150 , editable: true },\n            { headerName: \"周四\", field: \"thursday\", width: 150 , editable: true },\n            { headerName: \"周五\", field: \"friday\", width: 150 , editable: true },\n            { headerName: \"周六\", field: \"saturday\", width: 150 , editable: true },\n            { headerName: \"周七\", field: \"sunday\", width: 150 , editable: true },\n          ]\n        },\n        {\n          name: \"happy\",\n          component: \"table\",\n          columns: [\n            { headerName: \"娱乐安排\", field: \"name\", width: 200, editable: false },\n            { headerName: \"周一\", field: \"monday\", width: 150 , editable: true },\n            { headerName: \"周二\", field: \"tuesday\", width: 150 , editable: true },\n            { headerName: \"周三\", field: \"wednesday\", width: 150 , editable: true },\n            { headerName: \"周四\", field: \"thursday\", width: 150 , editable: true },\n            { headerName: \"周五\", field: \"friday\", width: 150 , editable: true },\n            { headerName: \"周六\", field: \"saturday\", width: 150 , editable: true },\n            { headerName: \"周七\", field: \"sunday\", width: 150 , editable: true },\n          ]\n        }\n      ]\n    }\n  ],\n}\n\nexport default schema","import * as React from 'react';\nimport useFieldApi, { UseFieldApiConfig } from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { DataGrid, GridColumns, GridRowsProp, GridEditCellPropsParams } from '@material-ui/data-grid';\nimport ComponentMapper from \"@data-driven-forms/mui-component-mapper/component-mapper\"\n\ntype TableFieldType = UseFieldApiConfig & {\n  columns: GridColumns\n}\n\nconst TableField = (props: TableFieldType): React.ReactElement => {\n  const { input, columns } = useFieldApi<GridRowsProp>(props)\n\n  const onEditCellChangeCommitted = ({field, id, props}: GridEditCellPropsParams) => {\n    const value = [...input.value]\n    value.forEach(row => {\n      if (row.id === id) {\n        row[field] = props.value\n      }\n    })\n\n    input.onChange(value)\n  }\n  \n  console.log(\"input.value\", input)\n\n  return (\n    <div style={{ minHeight: 200, width: '100%' }}>\n      <DataGrid\n        rows={input.value || []}\n        columns={columns}\n        disableSelectionOnClick\n        onEditCellChangeCommitted={onEditCellChangeCommitted}\n      />\n    </div>\n  )\n}\n\nComponentMapper['table'] = TableField\n\nexport default TableField","import * as React from \"react\"\nimport Container from \"@material-ui/core/Container\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport FormRenderer from \"@data-driven-forms/react-form-renderer/form-renderer\"\nimport FormTemplate from \"@data-driven-forms/mui-component-mapper/form-template\"\nimport ComponentMapper from \"@data-driven-forms/mui-component-mapper/component-mapper\"\nimport schema from \"./Schema\"\nimport \"../../Components/TableField\"\n\ntype FilterValue = {\n  // eslint-disable-next-line\n  [name: string]: any\n}\n\nconst UserEditor = (_: RouteComponentProps): React.ReactElement => {\n  const submitHandler = (value: FilterValue) => {\n    console.log(value)\n  }\n\n  const value: FilterValue = {\n    name: \"张三\",\n    learning: [\n      {\n        id: 1,\n        name: \"英语\",\n        monday: \"自习\",\n        tuesday: \"自习\",\n        wednesday: \"自习\",\n        thursday: \"自习\",\n        friday: \"自习\",\n        saturday: \"自习\",\n        sunday: \"自习\",\n      }\n    ],\n    happy: [\n      {\n        id: 1,\n        name: \"运动\",\n        monday: \"散步\",\n        tuesday: \"散步\",\n        wednesday: \"跑步\",\n        thursday: \"散步\",\n        friday: \"跑步\",\n        saturday: \"散步\",\n        sunday: \"游泳\",\n      }\n    ]\n  }\n\n  return (\n    <Container>\n      <h1>编辑用户</h1>\n      <FormRenderer\n        schema={schema}\n        onSubmit={submitHandler}\n        initialValues={value}\n        FormTemplate={(props) => (\n          <FormTemplate\n            submitLabel=\"搜索\"\n            canReset\n            resetLabel=\"重置\"\n            buttonOrder={[\"reset\", \"submit\", \"cancel\"]}\n            {...props}\n          />\n        )}\n        componentMapper={ComponentMapper}\n      />\n    </Container>\n  )\n}\n\nexport default UserEditor\n","import React, { ReactElement } from \"react\"\nimport { Router } from \"@reach/router\"\nimport FormList from \"./Pages/Form/List/List\"\nimport Layout from \"./Components/Layout\"\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { ConfirmProvider } from 'material-ui-confirm';\nimport { zhCN } from '@material-ui/core/locale';\nimport base from \"./base\"\nimport Dashboard from \"./Pages/Dashboard\";\nimport User from \"./Pages/User/User\";\nimport UserEditor from \"./Pages/UserEditor/UserEditor\";\n\nconst theme = createMuiTheme({\n}, zhCN);\n\nconst App = (): ReactElement => {\n  return (\n    <ThemeProvider theme={theme}>\n      <ConfirmProvider>\n        <Router>\n          <Layout path=\"/\">\n            <>\n              <Dashboard path={base()} />\n              <FormList path={base('form/list')} />\n              <User path={base('user')} />\n              <UserEditor path={base('user-editor')} />\n            </>\n          </Layout>\n        </Router>\n      </ConfirmProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}