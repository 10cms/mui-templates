{"version":3,"sources":["Pages/Form/List/schema.ts","Pages/Form/List/List.tsx","base.ts","Components/TreeMenu/index.tsx","Components/Layout/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["fields","component","name","label","defaultItem","items","content","validate","type","threshold","noItemsMessage","buttonLabels","add","remove","FieldContainerProps","container","style","paddingLeft","paddingRight","List","_","Container","schema","FormTemplate","props","submitLabel","componentMapper","onSubmit","console","log","basepath","process","url","path","useStyles","makeStyles","createStyles","root","width","maxWidth","MenuItem","title","children","icon","React","useState","open","setOpen","loaction","useLocation","ListItem","button","onClick","navigate","base","selected","pathname","ListItemIcon","Icon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","Menu","classes","Subheader","ListSubheader","undefined","subheader","className","map","item","key","navs","TreeMenu","menu","Header","getHeader","styled","DrawerSidebar","getDrawerSidebar","SidebarContent","getSidebarContent","SidebarTrigger","getSidebarTrigger","Content","getContent","LayoutBuilder","configureHeader","builder","registerConfig","position","initialHeight","configureEdgeSidebar","create","anchor","registerTemporaryConfig","registerPermanentConfig","collapsible","Layout","theme","useTheme","scheme","Toolbar","sidebarId","createMuiTheme","zhCN","App","ThemeProvider","from","to","noThrow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.128ea4c7.chunk.js","sourcesContent":["// https://data-driven-forms.org/provided-mappers/field-array?mapper=mui\n\nexport default {\n  fields: [\n    {\n      component: \"field-array\",\n      name: \"categories\",\n      label: \"大分类\",\n      defaultItem: {\n        name: \"分类名称\",\n        items: [\n          {\n            content: \"项目内容\"\n          }\n        ],\n      },\n      validate: [\n        {\n          type: \"min-items\",\n          threshold: 1,\n        },\n      ],\n      noItemsMessage: \"请添加分类\",\n      buttonLabels: {\n        add: \"添加分类\",\n        remove: \"删除分类\",\n      },\n      fields: [\n        {\n          component: \"text-field\",\n          label: \"分类名称\",\n          name: \"name\"\n        },\n        {\n          component: \"field-array\",\n          name: \"items\",\n          label: \"项目\",\n          noItemsMessage: \"请添加项目\",\n          FieldContainerProps: {\n            container: true,\n            style: {\n              paddingLeft: \"5%\",\n              paddingRight: \"5%\",\n            }\n          },\n          defaultItem: {\n            content: \"项目内容\"\n          },\n          validate: [\n            {\n              type: \"min-items\",\n              threshold: 1,\n            },\n          ],\n          fields: [\n            {\n              component: \"textarea\",\n              label: \"Item\",\n              name: \"content\"\n            },\n          ],\n          buttonLabels: {\n            add: \"添加项目\",\n            remove: \"删除项目\",\n          }\n        },\n      ],\n    },\n  ],\n}\n","import React, { ReactElement } from \"react\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport FormRenderer from \"@data-driven-forms/react-form-renderer/form-renderer\"\nimport FormTemplate from \"@data-driven-forms/mui-component-mapper/form-template\"\nimport componentMapper from \"@data-driven-forms/mui-component-mapper/component-mapper\"\nimport Container from \"@material-ui/core/Container\"\n\nimport schema from \"./schema\"\n\n// eslint-disable-next-line\nconst List = (_: RouteComponentProps): ReactElement => {\n  return (\n    <Container>\n      <h1>Form - Array Field</h1>\n      <FormRenderer\n        schema={schema}\n        FormTemplate={(props) => <FormTemplate submitLabel=\"提交保存\" {...props} />}\n        componentMapper={componentMapper}\n        onSubmit={console.log}\n      />\n    </Container>\n  )\n}\n\nexport default List\n","const basepath = process.env.PUBLIC_URL\n\nconst url = (path = ''): string => {\n  return basepath + '/' + path\n}\n\nexport default url","import React from \"react\"\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\"\nimport { navigate, useLocation } from \"@reach/router\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport ExpandLess from \"@material-ui/icons/ExpandLess\"\nimport ExpandMore from \"@material-ui/icons/ExpandMore\"\nimport Icon from \"@material-ui/core/Icon\"\nimport { ReactElement } from \"react\"\nimport base from \"../../base\"\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n    },\n  })\n)\n\ntype MenuProps = {\n  title?: string\n  items: Array<MenuItemProps>\n}\n\ntype MenuItemProps = {\n  title: string\n  icon?: string\n  url?: string\n  children?: Array<MenuItemProps>\n}\n\ntype TreeMenuData = Array<MenuProps>\n\nconst MenuItem = ({ title, url, children, icon }: MenuItemProps) => {\n  const [open, setOpen] = React.useState(true)\n  const loaction = useLocation()\n\n  const handleClick = () => {\n    if (children) {\n      setOpen(!open)\n    } else if (url) {\n      navigate(base(url))\n    }\n  }\n\n  return (\n    <>\n      <ListItem\n        button\n        onClick={handleClick}\n        selected={url === loaction.pathname}\n      >\n        <ListItemIcon>\n          <Icon>{icon}</Icon>\n        </ListItemIcon>\n        <ListItemText primary={title} />\n        {children && (open ? <ExpandLess /> : <ExpandMore />)}\n      </ListItem>\n      {children && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          {<Menu items={children} />}\n        </Collapse>\n      )}\n    </>\n  )\n}\n\nconst Menu = ({ title, items }: MenuProps) => {\n  const classes = useStyles()\n  const Subheader: ReactElement | undefined = title ? (\n    <ListSubheader component=\"div\">{title}</ListSubheader>\n  ) : undefined\n\n  return (\n    <List component=\"nav\" subheader={Subheader} className={classes.root}>\n      <>\n        {items.map((item: MenuItemProps, key) => (\n          <MenuItem {...item} key={key} />\n        ))}\n      </>\n    </List>\n  )\n}\n\nconst navs: TreeMenuData = [\n  {\n    items: [\n      {\n        title: \"动态表单\",\n        icon: \"home\",\n        children: [{ title: \"列表字段\", url: \"form/list\" }],\n      },\n    ],\n  },\n]\n\nexport default function TreeMenu(): ReactElement {\n  return (\n    <>\n      {navs.map((menu: MenuProps, key) => (\n        <Menu {...menu} key={key} />\n      ))}\n    </>\n  )\n}\n","import React, { ReactElement } from \"react\"\nimport styled from \"styled-components\"\nimport {\n  Root,\n  getHeader,\n  getDrawerSidebar,\n  getContent,\n  getSidebarContent,\n  getSidebarTrigger,\n} from \"@mui-treasury/layout\"\nimport { Toolbar, useTheme } from \"@material-ui/core\"\nimport LayoutBuilder from \"@mui-treasury/layout/builders/LayoutBuilder\"\nimport { RouteComponentProps } from \"@reach/router\"\nimport TreeMenu from \"../TreeMenu\"\n\nconst Header = getHeader(styled)\nconst DrawerSidebar = getDrawerSidebar(styled)\nconst SidebarContent = getSidebarContent(styled)\nconst SidebarTrigger = getSidebarTrigger(styled)\nconst Content = getContent(styled)\n\nconst schema = LayoutBuilder()\n\nschema.configureHeader((builder) => {\n  builder\n    .registerConfig(\"xs\", {\n      position: \"relative\",\n      initialHeight: 56,\n    })\n    .registerConfig(\"md\", {\n      position: \"sticky\",\n    })\n})\n\nschema.configureEdgeSidebar((builder) => {\n  builder\n    .create(\"primarySidebar\", {\n      anchor: \"left\",\n    })\n    .registerTemporaryConfig(\"xs\", {\n      width: 256,\n    })\n    .registerPermanentConfig(\"md\", {\n      width: 256,\n      collapsible: false,\n    })\n})\n\ntype LayoutProps = RouteComponentProps & {\n  children: ReactElement\n}\n\nconst Layout = ({ children }: LayoutProps): ReactElement => {\n  const theme = useTheme()\n\n  return (\n    <Root theme={theme} scheme={schema}>\n      <Header>\n        <Toolbar>\n          <SidebarTrigger sidebarId={'primarySidebar'} />\n        </Toolbar>\n      </Header>\n      <DrawerSidebar sidebarId={\"primarySidebar\"}>\n        <SidebarContent>\n          <TreeMenu />\n        </SidebarContent>\n      </DrawerSidebar>\n      <Content>{children}</Content>\n    </Root>\n  )\n}\nexport default Layout\n","import React, { ReactElement } from \"react\"\nimport { Redirect, Router } from \"@reach/router\"\nimport FormList from \"./Pages/Form/List/List\"\nimport Layout from \"./Components/Layout\"\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { ConfirmProvider } from 'material-ui-confirm';\nimport { zhCN } from '@material-ui/core/locale';\nimport base from \"./base\"\n\nconst theme = createMuiTheme({\n}, zhCN);\n\nconsole.log(base('form/list'))\n\nconst App = (): ReactElement => {\n  return (\n    <ThemeProvider theme={theme}>\n      <ConfirmProvider>\n        <Router>\n          <Redirect from=\"/\" to={base('form/list')} noThrow={true}/>\n          <Layout path=\"/\">\n            <FormList path={base('form/list')} />\n          </Layout>\n        </Router>\n      </ConfirmProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}